@model USP_Application.ViewModels.ClientFormViewModel

<div class="form-group">
    @Html.LabelFor(m => m.Client.Name)
    @Html.TextBoxFor(m => m.Client.Name, new { @class = "form-control", required = "required", @placeholder = "Enter your full name here" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Client.Gender)
    @Html.DropDownListFor(m => m.Client.Gender, new SelectList(Enum.GetValues(typeof(Entities.Gender))), "Select gender",
                                                new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Client.Gender, "", new { @class = "text-danger" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Client.CityId)
    @Html.DropDownListFor(m => m.Client.CityId, new SelectList(Model.Cities, "Id", "Name"), "Select city",
                                                new { @class = "form-control", id = "City" })
    @Html.ValidationMessageFor(m => m.Client.CityId, "", new { @class = "text-danger" })
</div>
@if (Model.Areas == null)
{
    <div class="form-group">
        @Html.LabelFor(m => m.Client.AreaId)
        @Html.DropDownListFor(m => m.Client.AreaId,
        new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "Select area",
        new { @class = "form-control", id = "Area" })
        @Html.ValidationMessageFor(m => m.Client.AreaId, "", new { @class = "text-danger" })
    </div>
}
else
{
    <div class="form-group">
        @Html.LabelFor(m => m.Client.AreaId)
        @Html.DropDownListFor(m => m.Client.AreaId,
        new SelectList(Model.Areas, "Id", "Name"), "Select area",
        new { @class = "form-control", id = "Area" })
        @Html.ValidationMessageFor(m => m.Client.AreaId, "", new { @class = "text-danger" })
    </div>
}
<div class="form-group">
    @Html.LabelFor(m => m.Client.Address)
    @Html.TextBoxFor(m => m.Client.Address, new { @class = "form-control", @placeholder = "Ex: H:248, Rd:4, Block:F, Bashundhara" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.UserLogin.Email)
    @Html.TextBoxFor(m => m.UserLogin.Email, new { @class = "form-control", @type = "email", @placeholder = "Ex: John.Smith@example.com" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.UserLogin.Phone)
    @Html.TextBoxFor(m => m.UserLogin.Phone, new { @class = "form-control", @placeholder = "01X-XXXXXXXX" })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.UserLogin.Password)
    @Html.TextBoxFor(m => m.UserLogin.Password, new { @class = "form-control", @type = "password", @placeholder = "Minimum 6 characters" })
</div>
@Html.HiddenFor(m => m.Client.Id)
@Html.HiddenFor(m => m.Client.FakeId)
@Html.HiddenFor(m => m.Client.JoiningDate)
@Html.HiddenFor(m => m.UserLogin.Id)
@Html.HiddenFor(m => m.UserLogin.UserType)
<p style="min-height:5px;"></p>